Content-Type: multipart/mixed; boundary="==BOUNDARY=="
MIME-Version: 1.0
--==BOUNDARY==
Content-Type: text/cloud-config; charset="us-ascii"

#cloud-config

# Hostname management
#preserve_hostname: False
hostname: ${VMNAME}
fqdn: ${VMNAME}.${DNSDOMAIN}

# Users
users:
    - default
    - name: ${ADDITIONAL_USER}
      groups: ['${SUDOGROUP}']
      shell: /bin/bash
      sudo: ALL=(ALL) NOPASSWD:ALL
      ssh-authorized-keys:
        - ${KEY}

# Configure where output will go
output:
  init:
    output: ">> /var/log/cloud-init.log"
    error: ">> /var/log/cloud-init.err"
  config: "tee -s /var/log/cloud-config.log"
  final:
    - ">> /var/log/cloud-init.log"
    - ">> /var/log/cloud-init.err"


# configure interaction with ssh server
ssh_genkeytypes: ['ed25519', 'rsa']

# Install my public ssh key to the first user configured
ssh_authorized_keys:
  - ${KEY}

timezone: ${TIMEZONE}

# Fix DNS in case we need to resolve anything
manage_resolv_conf: true
resolv_conf:
  #nameservers: ['8.8.8.8, 8.8.4.4']
  searchdomains:
    - ${DNSDOMAIN}
  domain: ${DNSDOMAIN}

# Install some basic packages
package_upgrade: true
packages:
  - vim
  - python
  - epel-release
  - ansible
  - git

# Custom cmds: remove cloud-init, setup basic security
# TODO:
#   iptables allow only relevant services
#   Swap out all the below to run inside an ansible playbook instead (script wgets gist of playbook)
runcmd:
  - ${NETRESTART}
  - ${CLOUDINITDISABLE}
  - [ systemctl, stop, cloud-init ]
  - [ sed, -i, -e, '/PermitRootLogin/s/^.*$/PermitRootLogin no/', /etc/ssh/sshd_config ]
  - [ systemctl, restart, sshd ]
  - [ mkdir, /run/tmp ]
  - [ curl, "https://bootstrap.pypa.io/get-pip.py", -o, "/run/tmp/get-pip.py" ]
  - [ python, /run/tmp/get-pip.py ]
  - [ userdel, centos ]
  - [ rm, -rf, /home/centos, /run/tmp ]

final_message: "The system is finally up, after $UPTIME seconds"