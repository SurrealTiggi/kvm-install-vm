#!/bin/bash
set -e


LIB_DIR=/var/lib/kvm-install-vm

#--------------------------------------------------
# Importers if installation is successful
#--------------------------------------------------

. $LIB_DIR/usage --source-only
. $LIB_DIR/colors --source-only
. $LIB_DIR/checkers --source-only
. $LIB_DIR/setters --source-only
. $LIB_DIR/utils --source-only
. $LIB_DIR/vm_helpers --source-only

# Set program name variable - basename without subshell
prog=${0##*/}

pushd() { command pushd "$@" >/dev/null ; }
popd() { command popd "$@" >/dev/null ; }

#--------------------------------------------------
# Main
#--------------------------------------------------

subcommand="${1:-none}"
[[ "${subcommand}" != "none" ]] && shift

case "${subcommand}" in
    none)
        usage
        ;;
    help)
        if [[ "${1:-none}" == "none" ]]; then
            usage
        elif [[ "$1" =~ ^create$|^remove$|^list$|^attach-disk$ ]]; then
            usage_subcommand "$1"
        else
            printf "'$1' is not a valid subcommand.\n\n"
            usage
        fi
        ;;
    list)
        virsh list --all
        exit 0
        ;;
    create|remove|attach-disk|remove-disk)
        if [[ "${1:-none}" == "none" ]]; then
            usage_subcommand "${subcommand}"
        elif [[ "$1" =~ ^help$ ]]; then
            usage_subcommand "${subcommand}"
        else
            set_defaults
            set_custom_defaults
            "${subcommand}" "$@"
            if [ ! -z "${ORC_SCRIPT+x}" ]
            then
                output "Time to orchestrate!"
                ./${ORC_SCRIPT} "$@"
            fi
            exit $?
        fi
        ;;
    *)
        die "'${subcommand}' is not a valid subcommand.  See 'kvm-install-vm help' for a list of subcommands."
        ;;
esac
